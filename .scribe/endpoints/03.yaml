name: 'Category Management'
description: |-

  APIs for managing task categories
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/categories
    metadata:
      groupName: 'Category Management'
      groupDescription: |-

        APIs for managing task categories
      subgroup: ''
      subgroupDescription: ''
      title: 'List all categories'
      description: 'Returns all categories belonging to the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "Success",
            "message": null,
            "data": [
              {
                "id": 1,
                "user_id": 1,
                "name": "Work",
                "color": "#ff0000",
                "created_at": "2023-01-01T00:00:00.000000Z",
                "updated_at": "2023-01-01T00:00:00.000000Z"
              },
              {
                "id": 2,
                "user_id": 1,
                "name": "Personal",
                "color": "#00ff00",
                "created_at": "2023-01-01T00:00:00.000000Z",
                "updated_at": "2023-01-01T00:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "Error",
            "message": "Unauthenticated.",
            "data": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/categories
    metadata:
      groupName: 'Category Management'
      groupDescription: |-

        APIs for managing task categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new category'
      description: 'Creates a new category for the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the category.'
        required: true
        example: Work
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      color:
        name: color
        description: 'The color code for the category (hexadecimal).'
        required: false
        example: '#ff0000'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Work
      color: '#ff0000'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "Success",
            "message": "Category created successfully",
            "data": {
              "id": 1,
              "user_id": 1,
              "name": "Work",
              "color": "#ff0000",
              "created_at": "2023-01-01T00:00:00.000000Z",
              "updated_at": "2023-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "Error",
            "message": "Unauthenticated.",
            "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "Error",
            "message": "The name field is required.",
            "data": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: 'Category Management'
      groupDescription: |-

        APIs for managing task categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific category'
      description: 'Returns details for a specific category if it belongs to the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category:
        name: category
        description: 'The ID of the category.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      category: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "Success",
            "message": null,
            "data": {
              "id": 1,
              "user_id": 1,
              "name": "Work",
              "color": "#ff0000",
              "created_at": "2023-01-01T00:00:00.000000Z",
              "updated_at": "2023-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": "Error",
            "message": "Unauthorized",
            "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "Error",
            "message": "No query results for model [App\\Models\\Category] 1",
            "data": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: 'Category Management'
      groupDescription: |-

        APIs for managing task categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a category'
      description: 'Updates the specified category if it belongs to the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category:
        name: category
        description: 'The ID of the category.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      category: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the category.'
        required: false
        example: 'Work Tasks'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      color:
        name: color
        description: 'The color code for the category (hexadecimal).'
        required: false
        example: '#0000ff'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Work Tasks'
      color: '#0000ff'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "Success",
            "message": "Category updated successfully",
            "data": {
              "id": 1,
              "user_id": 1,
              "name": "Work Tasks",
              "color": "#0000ff",
              "created_at": "2023-01-01T00:00:00.000000Z",
              "updated_at": "2023-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": "Error",
            "message": "Unauthorized",
            "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "Error",
            "message": "No query results for model [App\\Models\\Category] 1",
            "data": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: 'Category Management'
      groupDescription: |-

        APIs for managing task categories
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a category'
      description: |-
        Deletes the specified category if it belongs to the authenticated user.
        Associated tasks will have their category_id set to null.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category:
        name: category
        description: 'The ID of the category.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      category: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "Success",
            "message": "Category deleted successfully",
            "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": "Error",
            "message": "Unauthorized",
            "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "Error",
            "message": "No query results for model [App\\Models\\Category] 1",
            "data": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
